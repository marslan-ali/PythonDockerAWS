version: 0.2

env:
  variables:
    AWS_ACCOUNT_ID: "932283668189"
    AWS_DEFAULT_REGION: "us-west-2"
    IMAGE_REPO_NAME: "python-app-aws"
    IMAGE_TAG: "latest"
    # key: "value"
  #parameter-store:
     # key: "value"
     # key: "value"
  #secrets-manager:
     # key: secret-id:json-key:version-stage:version-id
     # key: secret-id:json-key:version-stage:version-id
  #exported-variables:
     # - variable
     # - variable
  #git-credential-helper: yes

phases:
  #install:
    #If you use the Ubuntu standard image 2.0 or later, you must specify runtime-versions.
    #If you specify runtime-versions and use an image other than Ubuntu standard image 2.0, the build fails.
    #runtime-versions:
      # name: version
      # name: version
    #commands:
      # - command
      # - command
  #pre_build:
    #commands:
      # - command
      # - command
  build:
    commands:
        - echo Regsion is $AWS_DEFAULT_REGION
        - echo Docker build
        - echo building docker image
        - docker build -t $IMAGE_REPO_NAME .
        - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
        - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
        - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      # - command
      # - command
  #post_build:
    #commands:
      # - command
      # - command
#reports:
  #report-name-or-arn:
    #files:
      # - location
      # - location
    #base-directory: location
    #discard-paths: yes
    #file-format: JunitXml | CucumberJson
artifacts:
  files: imagedefinitions.json
  #discard-paths: yes
  #base-directory: location
#cache:
  #paths:
    # - paths